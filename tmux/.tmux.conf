set-option -g default-shell usr/local/bin/zsh
#

# Set tmux to display in 256 colors
set -g default-terminal    "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Set border colors
set-option -g pane-border-style 'fg=#343D46,bg=colour0'
set-option -g pane-active-border-style 'fg=colour3,bg=colour0'

# Set status line message style
set -g message-style "fg=colour5,bg=default"

# Enable status bar
set-option -g status on

# Set window list to center
set -g status-justify centre

# Set default bg/fg settings for status bar
set-option -g status-style bright,bg='#1B2B34',fg=default

set-window-option -g window-status-current-format ''
set-window-option -g window-status-current-format ''
set-window-option -g window-status-current-style fg=colour114,bg=default,bright

# Configure CPU plugin colors for statusline
set -g @cpu_low_fg_color "#[fg=green]"
set -g @cpu_medium_fg_color "#[fg=yellow]"
set -g @cpu_high_fg_color "#[fg=red]"

set -g @cpu_low_bg_color "#[bg=default]"
set -g @cpu_medium_bg_color "#[bg=default]"
set -g @cpu_high_bg_color "#[bg=default]"

# Left Status Bar: [CPU Usage]
set -g status-left "#{cpu_bg_color}#{cpu_fg_color} #{cpu_icon}#{cpu_percentage}"
set -g status-left-length 85

# Right Status Bar: [Session Name][Date][Time]
set -g status-right "#[fg=magenta]#S #[fg=colour8]‹#[fg=yellow]#[fg=yellow,bold,bg=default] %b %d %Y #[fg=colour8]‹#[fg=green,bg=default]#[bg=default,fg=green,bold]%l:%M %p #[fg=blue]"

# Auto-hide status bar if pane is maximized
set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'


# Open panes with cur dir
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# remap window navigation to vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# clear history
# bind -n C-k send-keys -R \; clear-history

# mouse
set -g mouse on

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# vim
setw -g mode-keys vi

# system copy-paste integration
set -g default-shell $SHELL
# doesn't work on linux
if-shell -b '[ "$(echo "$(tmux -V | cut -c 6-) < 2.6" | bc)" = 1 ] && [ -n "$(command -v reattach-to-user-namespace)" ]' \
    "set-option -g default-command 'reattach-to-user-namespace -l $SHELL'"

bind -n C-h run "tmux select-pane -L"
bind -n C-j run "tmux select-pane -D"
bind -n C-k run "tmux select-pane -U"
bind -n C-l run "tmux select-pane -R"
# bind -n C-\ run "tmux select-pane -l"
set -sg escape-time 0

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Fig Tmux Integration: Enabled
source-file ~/.fig/tmux
# End of Fig Tmux Integration
